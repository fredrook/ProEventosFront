{"version":3,"file":"ngx-currency.umd.js","sources":["ngx-currency/src/currency-mask.config.ts","ngx-currency/src/input.manager.ts","ngx-currency/src/input.service.ts","ngx-currency/src/input.handler.ts","ngx-currency/src/currency-mask.directive.ts","ngx-currency/src/currency-mask.module.ts"],"names":["CurrencyMaskInputMode","InjectionToken","NG_VALUE_ACCESSOR","forwardRef","Optional","Inject","ElementRef","KeyValueDiffers","Directive","Input","HostListener","NgModule","CommonModule","FormsModule"],"mappings":"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","sourcesContent":["import {InjectionToken} from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n  align: string;\n  allowNegative: boolean;\n  allowZero: boolean;\n  decimal: string;\n  precision: number;\n  prefix: string;\n  suffix: string;\n  thousands: string;\n  nullable: boolean;\n  min?: number;\n  max?: number;\n  inputMode? : CurrencyMaskInputMode;\n}\n\nexport enum CurrencyMaskInputMode {\n  FINANCIAL,\n  NATURAL,\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\n","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let onlyNumbers = this.rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n        let haventReachedMaxLength = !(onlyNumbers.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = (<any>document).selection.createRange();\n\n            if (range && range.parentElement() == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                startRange.moveToBookmark(range.getBookmark());\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue || '';\n    }\n}\n","import { InputManager } from \"./input.manager\";\nimport { CurrencyMaskConfig, CurrencyMaskInputMode } from \"./currency-mask.config\";\n\nexport class InputService {\n    private SINGLE_DIGIT_REGEX: RegExp = new RegExp(/^[0-9\\u0660-\\u0669\\u06F0-\\u06F9]$/);\n    private ONLY_NUMBERS_REGEX: RegExp = new RegExp(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g);\n\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\n\n    initialize() {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    }\n\n    inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize()\n    }\n\n    addNumber(keyCode: number): void {\n        const {decimal, precision, inputMode} = this.options;\n        let keyChar = String.fromCharCode(keyCode);\n        const isDecimalChar = keyChar === this.options.decimal;\n\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, keyChar);\n            let selectionStart:number = undefined;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && precision > 0) {\n                selectionStart = this.rawValue.indexOf(decimal);\n                if (isDecimalChar) {\n                    selectionStart++;\n                }\n            }\n            this.updateFieldValue(selectionStart);\n        } else {\n            let selectionStart = this.inputSelection.selectionStart;\n            let selectionEnd = this.inputSelection.selectionEnd;\n            const rawValueStart = this.rawValue.substring(0, selectionStart);\n            let rawValueEnd = this.rawValue.substring(selectionEnd, this.rawValue.length);\n\n            // In natural mode, replace decimals instead of shifting them.\n            const inDecimalPortion = rawValueStart.indexOf(decimal) !== -1;\n            if (inputMode === CurrencyMaskInputMode.NATURAL && inDecimalPortion && selectionStart === selectionEnd) {\n              rawValueEnd = rawValueEnd.substring(1);\n            }\n\n            const newValue = rawValueStart + keyChar + rawValueEnd;\n            let nextSelectionStart = selectionStart + 1;\n            const isDecimalOrThousands = isDecimalChar || keyChar === this.options.thousands;\n            if (isDecimalOrThousands && keyChar === rawValueEnd[0]) {\n                // If the cursor is just before the decimal or thousands separator and the user types the\n                // decimal or thousands separator, move the cursor past it.\n                nextSelectionStart++;\n            } else if (!this.SINGLE_DIGIT_REGEX.test(keyChar)) {\n                // Ignore other non-numbers.\n                return;\n            }\n\n            this.rawValue = newValue;\n            this.updateFieldValue(nextSelectionStart);\n        }\n    }\n\n    applyMask(isNumber: boolean, rawValue: string, disablePadAndTrim = false): string {\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, min, max, inputMode} = this.options;\n\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n\n        if (!onlyNumbers && rawValue !== decimal) {\n            return \"\";\n        }\n\n        if (inputMode === CurrencyMaskInputMode.NATURAL && !isNumber && !disablePadAndTrim) {\n            rawValue = this.padOrTrimPrecision(rawValue);\n            onlyNumbers = rawValue.replace(this.ONLY_NUMBERS_REGEX, \"\");\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n            .replace(/^\\u0660*/g, \"\")\n            .replace(/^\\u06F0*/g, \"\")\n            .replace(/^0*/g, \"\");\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        let integerValue = parseInt(integerPart);\n\n        integerPart = integerPart.replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (thousands && integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        let decimalValue = parseInt(decimalPart) || 0;\n\n        let isNegative = rawValue.indexOf(\"-\") > -1;\n\n        // Ensure max is at least as large as min.\n        max = (this.isNullOrUndefined(max) || this.isNullOrUndefined(min)) ? max : Math.max(max, min);\n\n        // Restrict to the min and max values.\n        let newValue = integerValue + (decimalValue / 100);\n        newValue = isNegative ? -newValue : newValue;\n        if (!this.isNullOrUndefined(max) && newValue > max) {\n            return this.applyMask(true, max + '');\n        } else if (!this.isNullOrUndefined(min) && newValue < min) {\n            return this.applyMask(true, min + '');\n        }\n\n        if (precision > 0) {\n            if (newRawValue == \"0\" && decimalPart.length < precision) {\n                newRawValue += decimal + \"0\".repeat(precision - 1) + decimalPart;\n            } else {\n                newRawValue += decimal + decimalPart;\n            }\n        }\n\n        let isZero = newValue == 0;\n        let operator = (isNegative && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    padOrTrimPrecision(rawValue: string): string {\n        let {decimal, precision} = this.options;\n\n        let decimalIndex = rawValue.lastIndexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = rawValue.length;\n            rawValue += decimal;\n        }\n\n        let decimalPortion = rawValue.substring(decimalIndex).replace(this.ONLY_NUMBERS_REGEX, \"\");\n        const actualPrecision = decimalPortion.length;\n        if (actualPrecision < precision) {\n            for (let i = actualPrecision; i < precision; i++) {\n                decimalPortion += '0';\n            }\n        } else if (actualPrecision > precision) {\n            decimalPortion = decimalPortion.substring(0, decimalPortion.length + precision - actualPrecision);\n        }\n\n        return rawValue.substring(0, decimalIndex) + decimal + decimalPortion;\n    }\n\n    clearMask(rawValue: string): number {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\n            const re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            // Apply the mask to ensure the min and max values are enforced.\n            this.rawValue = this.applyMask(false, \"-\" + this.rawValue);\n        }\n    }\n\n    changeToPositive(): void {\n        // Apply the mask to ensure the min and max values are enforced.\n        this.rawValue = this.applyMask(false, this.rawValue.replace(\"-\", \"\"));\n    }\n\n    removeNumber(keyCode: number): void {\n        let {decimal, thousands, prefix, suffix, inputMode} = this.options;\n\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        const suffixStart = this.rawValue.length - suffix.length;\n        selectionEnd = Math.min(suffixStart, Math.max(selectionEnd, prefix.length));\n        selectionStart = Math.min(suffixStart, Math.max(selectionStart, prefix.length));\n\n        // Check if selection was entirely in the prefix or suffix. \n        if (selectionStart === selectionEnd &&\n            this.inputSelection.selectionStart !== this.inputSelection.selectionEnd) {\n            this.updateFieldValue(selectionStart);\n            return;\n        }\n\n        let decimalIndex = this.rawValue.indexOf(decimal);\n        if (decimalIndex === -1) {\n            decimalIndex = this.rawValue.length;\n        }\n\n        let shiftSelection = 0;\n        let insertChars = '';\n        const isCursorInDecimals = decimalIndex < selectionEnd;\n        const isCursorImmediatelyAfterDecimalPoint = decimalIndex + 1 === selectionEnd;\n        if (selectionEnd === selectionStart) {\n            if (keyCode == 8) {\n                if (selectionStart <= prefix.length) {\n                    return;\n                }\n                selectionStart--;\n\n                // If previous char isn't a number, go back one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart--;\n                }\n\n                // In natural mode, jump backwards when in decimal portion of number.\n                if (inputMode === CurrencyMaskInputMode.NATURAL && isCursorInDecimals) {\n                    shiftSelection = -1;\n                    // when removing a single whole number, replace it with 0\n                    if (isCursorImmediatelyAfterDecimalPoint && this.value < 10 && this.value > -10) {\n                        insertChars += '0';\n                    }\n                }\n            } else if (keyCode == 46 || keyCode == 63272) {\n                if (selectionStart === suffixStart) {\n                    return;\n                }\n                selectionEnd++;\n\n                // If next char isn't a number, go one more.\n                if (!this.rawValue.substr(selectionStart, 1).match(/\\d/)) {\n                    selectionStart++;\n                    selectionEnd++;\n                }\n            }\n        }\n\n        // In natural mode, replace decimals with 0s.\n        if (inputMode === CurrencyMaskInputMode.NATURAL && selectionStart > decimalIndex) {\n            const replacedDecimalCount = selectionEnd - selectionStart;\n            for (let i = 0; i < replacedDecimalCount; i++) {\n                insertChars += '0';\n            }\n        }\n\n        let selectionFromEnd = this.rawValue.length - selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + insertChars + this.rawValue.substring(selectionEnd);\n\n        // Remove leading thousand separator from raw value.\n        const startChar = this.rawValue.substr(prefix.length, 1);\n        if (startChar === thousands) {\n            this.rawValue = this.rawValue.substring(0, prefix.length) + this.rawValue.substring(prefix.length + 1);\n            selectionFromEnd = Math.min(selectionFromEnd, this.rawValue.length - prefix.length);\n        }\n\n        this.updateFieldValue(this.rawValue.length - selectionFromEnd + shiftSelection, true);\n    }\n\n    updateFieldValue(selectionStart?: number, disablePadAndTrim = false): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\", disablePadAndTrim);\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        selectionStart = Math.max(this.options.prefix.length, Math.min(selectionStart, this.rawValue.length - this.options.suffix.length));\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    prefixLength(): any {\n        return this.options.prefix.length;\n    }\n\n    suffixLength(): any {\n        return this.options.suffix.length;\n    }\n\n    isNullable() {\n        return this.options.nullable;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n\n    private isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n}\n","import {InputService} from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n\n    handleCut(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        let selectionStart = this.inputService.inputSelection.selectionStart;\n        let keyCode = this.inputService.rawValue.charCodeAt(selectionStart - 1);\n        let rawValueLength = this.inputService.rawValue.length;\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n\n        if (Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.inputService.updateFieldValue(selectionStart);\n            this.onModelChange(this.inputService.value);\n            return;\n        }\n\n        // Restore the old value.\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if (rawValueLength < storedRawValueLength) {\n            // Chrome Android seems to move the cursor in response to a backspace AFTER processing the\n            // input event, so we need to wrap this in a timeout.\n            this.timer(() => {\n                // Move the cursor to just after the deleted value.\n                this.inputService.updateFieldValue(selectionStart + 1);\n\n                // Then backspace it.\n                this.inputService.removeNumber(8);\n                this.onModelChange(this.inputService.value);  \n            }, 0);\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            // Move the cursor to just before the new value.\n            this.inputService.updateFieldValue(selectionStart - 1);\n\n            // Process the character like a keypress.\n            this.handleKeypressImpl(keyCode);\n        }\n    }\n\n    handleKeydown(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n\n            if (this.inputService.inputSelection.selectionStart <= this.inputService.prefixLength() &&\n                this.inputService.inputSelection.selectionEnd >= this.inputService.rawValue.length - this.inputService.suffixLength()) {\n                this.clearValue();\n            } else {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n\n    clearValue() {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeypress(event: any): void {\n        let keyCode = event.which || event.charCode || event.keyCode;\n        event.preventDefault();\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n\n        this.handleKeypressImpl(keyCode);\n    }\n\n    private handleKeypressImpl(keyCode: number): void {\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(null);\n                    }\n\n                    this.inputService.addNumber(keyCode);\n                }\n                break;\n        }\n\n        this.onModelChange(this.inputService.value);\n    }\n\n    handlePaste(event: any): void {\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    /**\n     * Passthrough to setTimeout that can be stubbed out in tests.\n     */\n    private timer(callback: () => void, delayMillis: number) {\n        setTimeout(callback, delayMillis);\n    }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Input,\n  OnInit,\n  Optional\n} from \"@angular/core\";\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG, CurrencyMaskInputMode} from \"./currency-mask.config\";\nimport {InputHandler} from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyMaskDirective),\n  multi: true,\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\n\n  @Input() options: Partial<CurrencyMaskConfig> = {};\n\n  public inputHandler: InputHandler;\n  public keyValueDiffer: KeyValueDiffer<any, any>;\n\n  public optionsTemplate: CurrencyMaskConfig = {\n      align: \"right\",\n      allowNegative: true,\n      allowZero: true,\n      decimal: \".\",\n      precision: 2,\n      prefix: \"$ \",\n      suffix: \"\",\n      thousands: \",\",\n      nullable: false,\n      inputMode: CurrencyMaskInputMode.FINANCIAL\n  };\n\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\n                                                        private elementRef: ElementRef,\n                                                        private keyValueDiffers: KeyValueDiffers) {\n    if (currencyMaskConfig) {\n        this.optionsTemplate = currencyMaskConfig;\n    }\n\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.style.textAlign = this.options && this.options.align ? this.options.align : this.optionsTemplate.align;\n  }\n\n  ngDoCheck() {\n    if (this.keyValueDiffer.diff(this.options)) {\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n  }\n\n  ngOnInit() {\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n  }\n\n  @HostListener(\"blur\", [\"$event\"])\n  handleBlur(event: any) {\n    this.inputHandler.getOnModelTouched().apply(event);\n  }\n\n  @HostListener(\"cut\", [\"$event\"])\n  handleCut(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleCut(event);\n    }\n  }\n\n  @HostListener(\"input\", [\"$event\"])\n  handleInput(event: any) {\n    if (this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleInput(event);\n    }\n  }\n\n  @HostListener(\"keydown\", [\"$event\"])\n  handleKeydown(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeydown(event);\n    }\n  }\n\n  @HostListener(\"keypress\", [\"$event\"])\n  handleKeypress(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handleKeypress(event);\n    }\n  }\n\n  @HostListener(\"paste\", [\"$event\"])\n  handlePaste(event: any) {\n    if (!this.isChromeAndroid()) {\n      !this.isReadOnly() && this.inputHandler.handlePaste(event);\n    }\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  handleDrop(event: any) {\n    if (!this.isChromeAndroid()) {\n      event.preventDefault();\n    }\n  }\n\n  isChromeAndroid(): boolean {\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n  }\n\n  isReadOnly(): boolean {\n    return this.elementRef.nativeElement.hasAttribute('readonly')\n  }\n\n  registerOnChange(callbackFunction: Function): void {\n    this.inputHandler.setOnModelChange(callbackFunction);\n  }\n\n  registerOnTouched(callbackFunction: Function): void {\n    this.inputHandler.setOnModelTouched(callbackFunction);\n  }\n\n  setDisabledState(value: boolean): void {\n    this.elementRef.nativeElement.disabled = value;\n  }\n\n  writeValue(value: number): void {\n    this.inputHandler.setValue(value);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [ CurrencyMaskDirective ],\n  exports: [ CurrencyMaskDirective ]\n})\nexport class NgxCurrencyModule {\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders<NgxCurrencyModule> {\n    return {\n      ngModule: NgxCurrencyModule,\n      providers: [{\n        provide: CURRENCY_MASK_CONFIG,\n        useValue: config,\n      }]\n    }\n  }\n}\n"]}